buildscript {
	repositories.mavenLocal()
}

plugins {
	id 'java'
    id 'application'
	// id 'com.github.sherter.google-java-format' version '0.9'
	id 'org.openjfx.javafxplugin' version '0.0.10'
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'com.google.auto.value:auto-value:1.6.2'
	compileOnly 'com.google.auto.value:auto-value-annotations:1.6.2'
	implementation 'com.google.guava:guava:30.1.1-jre'
	testImplementation 'com.google.guava:guava-testlib:30.1.1-jre'
	testImplementation 'com.google.truth:truth:0.44'
	testImplementation 'junit:junit:4.12'
}

javafx {
	version = "17"
	modules = [ 'javafx.controls' ]
}

application {
    mainClass = 'exercises.Sort'
}

task pong(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.Pong'
}

task breakout(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.Breakout'
}

task jetpack(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.JetpackRun'
}

task recursion(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.Recursion'
}

task sort(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.Sort'
}

task spriteDraw(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.SpriteDraw'
}

task spriteFollow(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.SpriteFollow'
}

task polygonDraw(type:JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'exercises.PolygonDraw'
}
